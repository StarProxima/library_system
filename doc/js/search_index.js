var search_data = {"index":{"searchIndex":["author","authordbdatasource","authorinputform","authorinputformcontrollercreate","authorinputformcontrolleredit","authorlistcontroller","authorlistview","book","bookdbdatasource","dbclient","dbdatasource","dbsourceadapter","datalist","dataliststudentshort","datatable","datatransformerbase","datatransformerjson","datatransformeryaml","filedatasource","filesourceadapter","liststatenotifier","loggerholder","mainwindow","publisher","publisherdbdatasource","publisherinputform","publisherinputformcontrollercreate","publisherinputformcontrolleredit","publisherlistcontroller","publisherlistview","student","studentbase","studentrepository","studentshort","tabstudentscontroller","tabstudentsview","add()","add()","add()","add()","add_listener()","add_listener()","add_student()","add_student()","add_student()","add_student()","change()","change()","change()","close()","close()","column_names()","column_names()","contact_color()","count()","count()","create()","create()","create()","create()","create()","create()","data_table()","delete()","delete()","delete()","delete()","delete_listener()","delete_selected()","delete_selected()","email=()","father_name=()","filter_email()","filter_father_name()","first_name=()","from_hash()","from_json_str()","from_student()","get()","get()","get()","get()","get_item()","get_list()","get_list()","get_list()","git=()","has_contacts?()","has_git?()","hash_list_to_str()","hash_list_to_str()","hash_list_to_str()","instance()","instance()","instance()","last_id()","last_name=()","last_name_and_initials()","load_from_file()","make_readonly()","make_readonly()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notify()","notify_listeners()","on_create()","on_create()","on_create()","on_create()","on_create()","on_datalist_changed()","on_db_conn_error()","on_view_created()","on_view_created()","on_view_created()","on_view_created()","on_view_created()","on_view_created()","on_view_created()","paginated_short_students()","paginated_short_students()","paginated_short_students()","paginated_short_students()","phone=()","populate_fields()","populate_fields()","prepare_exec()","prepare_exec()","process_fields()","process_fields()","process_fields()","process_fields()","query()","query()","refresh_data()","refresh_data()","refresh_data()","remove_listener()","remove_student()","remove_student()","remove_student()","remove_student()","replace()","replace_objects()","replace_student()","replace_student()","replace_student()","replace_student()","save_to_file()","select_element()","selected_id()","set_all()","set_contacts()","set_value()","set_value()","set_view()","set_view()","set_view()","set_view()","short_contact()","short_info()","show_modal_add()","show_modal_add()","show_modal_edit()","show_modal_edit()","show_view()","show_view()","show_view()","sort()","sort()","sorted()","str_to_hash_list()","str_to_hash_list()","str_to_hash_list()","student_by_id()","student_by_id()","student_by_id()","student_by_id()","student_count()","student_count()","student_count()","student_count()","table_fields()","table_fields()","telegram=()","to_2d_array()","to_hash()","to_json_str()","to_s()","to_s()","to_s()","update()","update()","update_count()","update_count()","update_student_count()","valid?()","valid_email?()","valid_name?()","valid_phone?()","valid_profile_name?()","gemfile","gemfile.lock","add_author_seq.puml","author.puml","core.puml","delete_author.puml","edit_author.puml","er.puml","publisher.puml","start.puml","config.yaml","library_config.yaml","create_db.sql","create_tables.sql","mock_data.sql"],"longSearchIndex":["author","authordbdatasource","authorinputform","authorinputformcontrollercreate","authorinputformcontrolleredit","authorlistcontroller","authorlistview","book","bookdbdatasource","dbclient","dbdatasource","dbsourceadapter","datalist","dataliststudentshort","datatable","datatransformerbase","datatransformerjson","datatransformeryaml","filedatasource","filesourceadapter","liststatenotifier","loggerholder","mainwindow","publisher","publisherdbdatasource","publisherinputform","publisherinputformcontrollercreate","publisherinputformcontrolleredit","publisherlistcontroller","publisherlistview","student","studentbase","studentrepository","studentshort","tabstudentscontroller","tabstudentsview","authordbdatasource#add()","bookdbdatasource#add()","liststatenotifier#add()","publisherdbdatasource#add()","datalist#add_listener()","liststatenotifier#add_listener()","dbsourceadapter#add_student()","filedatasource#add_student()","filesourceadapter#add_student()","studentrepository#add_student()","authordbdatasource#change()","bookdbdatasource#change()","publisherdbdatasource#change()","authorinputform#close()","publisherinputform#close()","datalist#column_names()","dataliststudentshort#column_names()","tabstudentsview#contact_color()","authordbdatasource#count()","publisherdbdatasource#count()","authorinputform#create()","authorlistview#create()","mainwindow#create()","publisherinputform#create()","publisherlistview#create()","tabstudentsview#create()","datalist#data_table()","authordbdatasource#delete()","bookdbdatasource#delete()","liststatenotifier#delete()","publisherdbdatasource#delete()","liststatenotifier#delete_listener()","authorlistcontroller#delete_selected()","publisherlistcontroller#delete_selected()","studentbase#email=()","student#father_name=()","publisherlistcontroller#filter_email()","authorlistcontroller#filter_father_name()","student#first_name=()","student::from_hash()","student::from_json_str()","studentshort::from_student()","authordbdatasource#get()","bookdbdatasource#get()","liststatenotifier#get()","publisherdbdatasource#get()","datatable#get_item()","authordbdatasource#get_list()","bookdbdatasource#get_list()","publisherdbdatasource#get_list()","studentbase#git=()","studentbase#has_contacts?()","studentbase#has_git?()","datatransformerbase#hash_list_to_str()","datatransformerjson#hash_list_to_str()","datatransformeryaml#hash_list_to_str()","dbclient::instance()","dbdatasource::instance()","loggerholder::instance()","dbclient#last_id()","student#last_name=()","student#last_name_and_initials()","filedatasource#load_from_file()","authorinputform#make_readonly()","publisherinputform#make_readonly()","author::new()","authordbdatasource::new()","authorinputform::new()","authorinputformcontrollercreate::new()","authorinputformcontrolleredit::new()","authorlistcontroller::new()","authorlistview::new()","book::new()","bookdbdatasource::new()","dbclient::new()","dbdatasource::new()","dbsourceadapter::new()","datalist::new()","dataliststudentshort::new()","datatable::new()","filedatasource::new()","filesourceadapter::new()","liststatenotifier::new()","loggerholder::new()","mainwindow::new()","publisher::new()","publisherdbdatasource::new()","publisherinputform::new()","publisherinputformcontrollercreate::new()","publisherinputformcontrolleredit::new()","publisherlistcontroller::new()","publisherlistview::new()","student::new()","studentbase::new()","studentrepository::new()","studentshort::new()","studentshort::new()","tabstudentscontroller::new()","tabstudentsview::new()","datalist#notify()","liststatenotifier#notify_listeners()","authorinputform#on_create()","authorlistview#on_create()","publisherinputform#on_create()","publisherlistview#on_create()","tabstudentsview#on_create()","tabstudentsview#on_datalist_changed()","tabstudentscontroller#on_db_conn_error()","authorinputformcontrollercreate#on_view_created()","authorinputformcontrolleredit#on_view_created()","authorlistcontroller#on_view_created()","publisherinputformcontrollercreate#on_view_created()","publisherinputformcontrolleredit#on_view_created()","publisherlistcontroller#on_view_created()","tabstudentscontroller#on_view_created()","dbsourceadapter#paginated_short_students()","filedatasource#paginated_short_students()","filesourceadapter#paginated_short_students()","studentrepository#paginated_short_students()","studentbase#phone=()","authorinputformcontrolleredit#populate_fields()","publisherinputformcontrolleredit#populate_fields()","dbclient#prepare_exec()","dbdatasource#prepare_exec()","authorinputformcontrollercreate#process_fields()","authorinputformcontrolleredit#process_fields()","publisherinputformcontrollercreate#process_fields()","publisherinputformcontrolleredit#process_fields()","dbclient#query()","dbdatasource#query()","authorlistcontroller#refresh_data()","publisherlistcontroller#refresh_data()","tabstudentscontroller#refresh_data()","datalist#remove_listener()","dbsourceadapter#remove_student()","filedatasource#remove_student()","filesourceadapter#remove_student()","studentrepository#remove_student()","liststatenotifier#replace()","datalist#replace_objects()","dbsourceadapter#replace_student()","filedatasource#replace_student()","filesourceadapter#replace_student()","studentrepository#replace_student()","filedatasource#save_to_file()","datalist#select_element()","datalist#selected_id()","liststatenotifier#set_all()","student#set_contacts()","authorinputform#set_value()","publisherinputform#set_value()","authorinputformcontrollercreate#set_view()","authorinputformcontrolleredit#set_view()","publisherinputformcontrollercreate#set_view()","publisherinputformcontrolleredit#set_view()","studentbase#short_contact()","student#short_info()","authorlistcontroller#show_modal_add()","publisherlistcontroller#show_modal_add()","authorlistcontroller#show_modal_edit()","publisherlistcontroller#show_modal_edit()","authorlistcontroller#show_view()","publisherlistcontroller#show_view()","tabstudentscontroller#show_view()","authorlistcontroller#sort()","publisherlistcontroller#sort()","filedatasource#sorted()","datatransformerbase#str_to_hash_list()","datatransformerjson#str_to_hash_list()","datatransformeryaml#str_to_hash_list()","dbsourceadapter#student_by_id()","filedatasource#student_by_id()","filesourceadapter#student_by_id()","studentrepository#student_by_id()","dbsourceadapter#student_count()","filedatasource#student_count()","filesourceadapter#student_count()","studentrepository#student_count()","datalist#table_fields()","dataliststudentshort#table_fields()","studentbase#telegram=()","datatable#to_2d_array()","student#to_hash()","student#to_json_str()","datatable#to_s()","student#to_s()","studentshort#to_s()","authorlistview#update()","publisherlistview#update()","authorlistview#update_count()","publisherlistview#update_count()","tabstudentsview#update_student_count()","studentbase#valid?()","studentbase::valid_email?()","studentbase::valid_name?()","studentbase::valid_phone?()","studentbase::valid_profile_name?()","","","","","","","","","","","","","","",""],"info":[["Author","","Author.html","",""],["AuthorDBDataSource","","AuthorDBDataSource.html","",""],["AuthorInputForm","","AuthorInputForm.html","",""],["AuthorInputFormControllerCreate","","AuthorInputFormControllerCreate.html","",""],["AuthorInputFormControllerEdit","","AuthorInputFormControllerEdit.html","",""],["AuthorListController","","AuthorListController.html","","<p>Класс AuthorListController отвечает за управление списком авторов, используя различные методы для обновления …\n"],["AuthorListView","","AuthorListView.html","",""],["Book","","Book.html","",""],["BookDBDataSource","","BookDBDataSource.html","",""],["DBClient","","DBClient.html","",""],["DBDataSource","","DBDataSource.html","",""],["DBSourceAdapter","","DBSourceAdapter.html","",""],["DataList","","DataList.html","",""],["DataListStudentShort","","DataListStudentShort.html","",""],["DataTable","","DataTable.html","",""],["DataTransformerBase","","DataTransformerBase.html","",""],["DataTransformerJSON","","DataTransformerJSON.html","",""],["DataTransformerYAML","","DataTransformerYAML.html","",""],["FileDataSource","","FileDataSource.html","",""],["FileSourceAdapter","","FileSourceAdapter.html","",""],["ListStateNotifier","","ListStateNotifier.html","",""],["LoggerHolder","","LoggerHolder.html","","<p>Обертка для хранения объекта Logger\n"],["MainWindow","","MainWindow.html","",""],["Publisher","","Publisher.html","",""],["PublisherDBDataSource","","PublisherDBDataSource.html","",""],["PublisherInputForm","","PublisherInputForm.html","",""],["PublisherInputFormControllerCreate","","PublisherInputFormControllerCreate.html","",""],["PublisherInputFormControllerEdit","","PublisherInputFormControllerEdit.html","",""],["PublisherListController","","PublisherListController.html","",""],["PublisherListView","","PublisherListView.html","",""],["Student","","Student.html","",""],["StudentBase","","StudentBase.html","",""],["StudentRepository","","StudentRepository.html","",""],["StudentShort","","StudentShort.html","",""],["TabStudentsController","","TabStudentsController.html","",""],["TabStudentsView","","TabStudentsView.html","",""],["add","AuthorDBDataSource","AuthorDBDataSource.html#method-i-add","(author)","<p>добавляет нового автора в базу данных, возвращает созданную запись.\n"],["add","BookDBDataSource","BookDBDataSource.html#method-i-add","(book)",""],["add","ListStateNotifier","ListStateNotifier.html#method-i-add","(object)","<p>добавляет объект в массив items и уведомляет всех слушателей.\n"],["add","PublisherDBDataSource","PublisherDBDataSource.html#method-i-add","(publisher)",""],["add_listener","DataList","DataList.html#method-i-add_listener","(listener)",""],["add_listener","ListStateNotifier","ListStateNotifier.html#method-i-add_listener","(listener)","<p>добавляет нового слушателя в массив listeners.\n"],["add_student","DBSourceAdapter","DBSourceAdapter.html#method-i-add_student","(student)",""],["add_student","FileDataSource","FileDataSource.html#method-i-add_student","(student)",""],["add_student","FileSourceAdapter","FileSourceAdapter.html#method-i-add_student","(student)",""],["add_student","StudentRepository","StudentRepository.html#method-i-add_student","(student)",""],["change","AuthorDBDataSource","AuthorDBDataSource.html#method-i-change","(author)","<p>изменяет данные об авторе в базе данных, возвращает измененную запись.\n"],["change","BookDBDataSource","BookDBDataSource.html#method-i-change","(book)",""],["change","PublisherDBDataSource","PublisherDBDataSource.html#method-i-change","(publisher)",""],["close","AuthorInputForm","AuthorInputForm.html#method-i-close","()",""],["close","PublisherInputForm","PublisherInputForm.html#method-i-close","()",""],["column_names","DataList","DataList.html#method-i-column_names","()","<p>Имена атрибутов объектов по порядку. Переопределить в наследниках\n"],["column_names","DataListStudentShort","DataListStudentShort.html#method-i-column_names","()","<p>Делаем приватный new предка публичным\n"],["contact_color","TabStudentsView","TabStudentsView.html#method-i-contact_color","(type)",""],["count","AuthorDBDataSource","AuthorDBDataSource.html#method-i-count","()","<p>возвращает количество записей об авторах в базе данных.\n"],["count","PublisherDBDataSource","PublisherDBDataSource.html#method-i-count","()",""],["create","AuthorInputForm","AuthorInputForm.html#method-i-create","()",""],["create","AuthorListView","AuthorListView.html#method-i-create","()",""],["create","MainWindow","MainWindow.html#method-i-create","()",""],["create","PublisherInputForm","PublisherInputForm.html#method-i-create","()",""],["create","PublisherListView","PublisherListView.html#method-i-create","()",""],["create","TabStudentsView","TabStudentsView.html#method-i-create","()",""],["data_table","DataList","DataList.html#method-i-data_table","()","<p>Получить DataTable со всеми элементами.\n"],["delete","AuthorDBDataSource","AuthorDBDataSource.html#method-i-delete","(id)","<p>удаляет запись об авторе из базы данных.\n"],["delete","BookDBDataSource","BookDBDataSource.html#method-i-delete","(id)",""],["delete","ListStateNotifier","ListStateNotifier.html#method-i-delete","(object)","<p>удаляет объект из массива items и уведомляет всех слушателей.\n"],["delete","PublisherDBDataSource","PublisherDBDataSource.html#method-i-delete","(id)",""],["delete_listener","ListStateNotifier","ListStateNotifier.html#method-i-delete_listener","(listener)","<p>удаляет слушателя из массива listeners.\n"],["delete_selected","AuthorListController","AuthorListController.html#method-i-delete_selected","(current_page, per_page, selected_row)","<p>метод, который получает выбранный элемент из state_notifier, удаляет его из базы данных и из state_notifier …\n"],["delete_selected","PublisherListController","PublisherListController.html#method-i-delete_selected","(current_page, per_page, selected_row)",""],["email=","StudentBase","StudentBase.html#method-i-email-3D","(new_email)",""],["father_name=","Student","Student.html#method-i-father_name-3D","(new_father_name)",""],["filter_email","PublisherListController","PublisherListController.html#method-i-filter_email","(page, per_page, filter_index)",""],["filter_father_name","AuthorListController","AuthorListController.html#method-i-filter_father_name","(page, per_page, filter_index)",""],["first_name=","Student","Student.html#method-i-first_name-3D","(new_first_name)",""],["from_hash","Student","Student.html#method-c-from_hash","(hash)","<p>Делаем new предка публичным\n"],["from_json_str","Student","Student.html#method-c-from_json_str","(str)","<p>Конструктор из JSON строки\n"],["from_student","StudentShort","StudentShort.html#method-c-from_student","(student)","<p>Конструктор из Student\n"],["get","AuthorDBDataSource","AuthorDBDataSource.html#method-i-get","(id)","<p>возвращает запись об авторе по заданному id.\n"],["get","BookDBDataSource","BookDBDataSource.html#method-i-get","(id)",""],["get","ListStateNotifier","ListStateNotifier.html#method-i-get","(number)","<p>возвращает объект из массива items по индексу.\n"],["get","PublisherDBDataSource","PublisherDBDataSource.html#method-i-get","(id)",""],["get_item","DataTable","DataTable.html#method-i-get_item","(row, col)","<p>Получить значение в ячейке [row, col]\n"],["get_list","AuthorDBDataSource","AuthorDBDataSource.html#method-i-get_list","(page_size, page_num, sort_field, sort_direction, has_father_name = nil)","<p>возвращает список авторов с учетом фильтра по наличию отчества и сортировки, позволяет задавать количество …\n"],["get_list","BookDBDataSource","BookDBDataSource.html#method-i-get_list","(page_size, page_num, sort_field, sort_direction)",""],["get_list","PublisherDBDataSource","PublisherDBDataSource.html#method-i-get_list","(page_size, page_num, sort_field, sort_direction, has_email = nil)",""],["git=","StudentBase","StudentBase.html#method-i-git-3D","(new_git)",""],["has_contacts?","StudentBase","StudentBase.html#method-i-has_contacts-3F","()","<p>Валидаторы объекта\n"],["has_git?","StudentBase","StudentBase.html#method-i-has_git-3F","()",""],["hash_list_to_str","DataTransformerBase","DataTransformerBase.html#method-i-hash_list_to_str","(hash_list)",""],["hash_list_to_str","DataTransformerJSON","DataTransformerJSON.html#method-i-hash_list_to_str","(hash_list)",""],["hash_list_to_str","DataTransformerYAML","DataTransformerYAML.html#method-i-hash_list_to_str","(hash_list)",""],["instance","DBClient","DBClient.html#method-c-instance","()",""],["instance","DBDataSource","DBDataSource.html#method-c-instance","()",""],["instance","LoggerHolder","LoggerHolder.html#method-c-instance","()",""],["last_id","DBClient","DBClient.html#method-i-last_id","()",""],["last_name=","Student","Student.html#method-i-last_name-3D","(new_last_name)","<p>Сеттеры с валидацией перед присваиванием\n"],["last_name_and_initials","Student","Student.html#method-i-last_name_and_initials","()","<p>Имя пользователя в формате Фамилия И. О.\n"],["load_from_file","FileDataSource","FileDataSource.html#method-i-load_from_file","(file_path)",""],["make_readonly","AuthorInputForm","AuthorInputForm.html#method-i-make_readonly","(*fields)",""],["make_readonly","PublisherInputForm","PublisherInputForm.html#method-i-make_readonly","(*fields)",""],["new","Author","Author.html#method-c-new","(author_id, first_name, last_name, father_name = nil)",""],["new","AuthorDBDataSource","AuthorDBDataSource.html#method-c-new","()",""],["new","AuthorInputForm","AuthorInputForm.html#method-c-new","(controller, existing_student = nil)",""],["new","AuthorInputFormControllerCreate","AuthorInputFormControllerCreate.html#method-c-new","(parent_controller)",""],["new","AuthorInputFormControllerEdit","AuthorInputFormControllerEdit.html#method-c-new","(parent_controller, item)",""],["new","AuthorListController","AuthorListController.html#method-c-new","(view)",""],["new","AuthorListView","AuthorListView.html#method-c-new","()",""],["new","Book","Book.html#method-c-new","(book_id, title, author_id, publisher_id)",""],["new","BookDBDataSource","BookDBDataSource.html#method-c-new","()",""],["new","DBClient","DBClient.html#method-c-new","()",""],["new","DBDataSource","DBDataSource.html#method-c-new","()",""],["new","DBSourceAdapter","DBSourceAdapter.html#method-c-new","()",""],["new","DataList","DataList.html#method-c-new","(objects)","<p>Конструктор, принимает массив любых объектов\n"],["new","DataListStudentShort","DataListStudentShort.html#method-c-new","(objects)","<p>Конструктор, принимает массив любых объектов\n"],["new","DataTable","DataTable.html#method-c-new","(table)","<p>Конструктор, принимает 2D Array\n"],["new","FileDataSource","FileDataSource.html#method-c-new","(data_transformer)",""],["new","FileSourceAdapter","FileSourceAdapter.html#method-c-new","(data_transformer, file_path)",""],["new","ListStateNotifier","ListStateNotifier.html#method-c-new","()",""],["new","LoggerHolder","LoggerHolder.html#method-c-new","()",""],["new","MainWindow","MainWindow.html#method-c-new","()",""],["new","Publisher","Publisher.html#method-c-new","(publisher_id, name, email = nil)",""],["new","PublisherDBDataSource","PublisherDBDataSource.html#method-c-new","()",""],["new","PublisherInputForm","PublisherInputForm.html#method-c-new","(controller, existing_student = nil)",""],["new","PublisherInputFormControllerCreate","PublisherInputFormControllerCreate.html#method-c-new","(parent_controller)",""],["new","PublisherInputFormControllerEdit","PublisherInputFormControllerEdit.html#method-c-new","(parent_controller, item)",""],["new","PublisherListController","PublisherListController.html#method-c-new","(view)",""],["new","PublisherListView","PublisherListView.html#method-c-new","()",""],["new","Student","Student.html#method-c-new","(last_name, first_name, father_name, **options)","<p>Стандартный конструктор\n"],["new","StudentBase","StudentBase.html#method-c-new","(id: nil, phone: nil, telegram: nil, email: nil, git: nil)","<p>Стандартный конструктор\n"],["new","StudentRepository","StudentRepository.html#method-c-new","(data_source_adapter)",""],["new","StudentShort","StudentShort.html#method-c-new","(id: nil, phone: nil, telegram: nil, email: nil, git: nil)","<p>Стандартный конструктор\n"],["new","StudentShort","StudentShort.html#method-c-new","(id, info_str)","<p>Стандартный конструктор\n"],["new","TabStudentsController","TabStudentsController.html#method-c-new","(view)",""],["new","TabStudentsView","TabStudentsView.html#method-c-new","()",""],["notify","DataList","DataList.html#method-i-notify","()",""],["notify_listeners","ListStateNotifier","ListStateNotifier.html#method-i-notify_listeners","()","<p>уведомляет всех слушателей о изменении массива items.\n"],["on_create","AuthorInputForm","AuthorInputForm.html#method-i-on_create","()",""],["on_create","AuthorListView","AuthorListView.html#method-i-on_create","()",""],["on_create","PublisherInputForm","PublisherInputForm.html#method-i-on_create","()",""],["on_create","PublisherListView","PublisherListView.html#method-i-on_create","()",""],["on_create","TabStudentsView","TabStudentsView.html#method-i-on_create","()",""],["on_datalist_changed","TabStudentsView","TabStudentsView.html#method-i-on_datalist_changed","(new_table)","<p>Метод наблюдателя datalist\n"],["on_db_conn_error","TabStudentsController","TabStudentsController.html#method-i-on_db_conn_error","()",""],["on_view_created","AuthorInputFormControllerCreate","AuthorInputFormControllerCreate.html#method-i-on_view_created","()",""],["on_view_created","AuthorInputFormControllerEdit","AuthorInputFormControllerEdit.html#method-i-on_view_created","()",""],["on_view_created","AuthorListController","AuthorListController.html#method-i-on_view_created","()",""],["on_view_created","PublisherInputFormControllerCreate","PublisherInputFormControllerCreate.html#method-i-on_view_created","()",""],["on_view_created","PublisherInputFormControllerEdit","PublisherInputFormControllerEdit.html#method-i-on_view_created","()",""],["on_view_created","PublisherListController","PublisherListController.html#method-i-on_view_created","()",""],["on_view_created","TabStudentsController","TabStudentsController.html#method-i-on_view_created","()",""],["paginated_short_students","DBSourceAdapter","DBSourceAdapter.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)",""],["paginated_short_students","FileDataSource","FileDataSource.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)","<p>Получить page по счету count элементов (страница начинается с 1)\n"],["paginated_short_students","FileSourceAdapter","FileSourceAdapter.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)",""],["paginated_short_students","StudentRepository","StudentRepository.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)","<p>Получить page по счету count элементов (страница начинается с 1)\n"],["phone=","StudentBase","StudentBase.html#method-i-phone-3D","(new_phone)","<p>Сеттеры с валидацией перед присваиванием\n"],["populate_fields","AuthorInputFormControllerEdit","AuthorInputFormControllerEdit.html#method-i-populate_fields","(item)",""],["populate_fields","PublisherInputFormControllerEdit","PublisherInputFormControllerEdit.html#method-i-populate_fields","(item)",""],["prepare_exec","DBClient","DBClient.html#method-i-prepare_exec","(statement, *params)",""],["prepare_exec","DBDataSource","DBDataSource.html#method-i-prepare_exec","(statement, *params)",""],["process_fields","AuthorInputFormControllerCreate","AuthorInputFormControllerCreate.html#method-i-process_fields","(fields)",""],["process_fields","AuthorInputFormControllerEdit","AuthorInputFormControllerEdit.html#method-i-process_fields","(fields)",""],["process_fields","PublisherInputFormControllerCreate","PublisherInputFormControllerCreate.html#method-i-process_fields","(fields)",""],["process_fields","PublisherInputFormControllerEdit","PublisherInputFormControllerEdit.html#method-i-process_fields","(fields)",""],["query","DBClient","DBClient.html#method-i-query","(statement)",""],["query","DBDataSource","DBDataSource.html#method-i-query","(statement)",""],["refresh_data","AuthorListController","AuthorListController.html#method-i-refresh_data","(page, per_page)","<p>етод, который получает список авторов из базы данных, устанавливает их в state_notifier и обновляет пользовательский …\n"],["refresh_data","PublisherListController","PublisherListController.html#method-i-refresh_data","(page, per_page)",""],["refresh_data","TabStudentsController","TabStudentsController.html#method-i-refresh_data","(page, per_page)",""],["remove_listener","DataList","DataList.html#method-i-remove_listener","(listener)",""],["remove_student","DBSourceAdapter","DBSourceAdapter.html#method-i-remove_student","(student_id)",""],["remove_student","FileDataSource","FileDataSource.html#method-i-remove_student","(student_id)",""],["remove_student","FileSourceAdapter","FileSourceAdapter.html#method-i-remove_student","(student_id)",""],["remove_student","StudentRepository","StudentRepository.html#method-i-remove_student","(student_id)",""],["replace","ListStateNotifier","ListStateNotifier.html#method-i-replace","(object, new_object)","<p>заменяет объект в массиве items на новый объект и уведомляет всех слушателей.\n"],["replace_objects","DataList","DataList.html#method-i-replace_objects","(objects)","<p>Добавить элементы в конец списка\n"],["replace_student","DBSourceAdapter","DBSourceAdapter.html#method-i-replace_student","(student_id, student)",""],["replace_student","FileDataSource","FileDataSource.html#method-i-replace_student","(student_id, student)",""],["replace_student","FileSourceAdapter","FileSourceAdapter.html#method-i-replace_student","(student_id, student)",""],["replace_student","StudentRepository","StudentRepository.html#method-i-replace_student","(student_id, student)",""],["save_to_file","FileDataSource","FileDataSource.html#method-i-save_to_file","(file_path)",""],["select_element","DataList","DataList.html#method-i-select_element","(number)","<p>Выбрать элемент по номеру\n"],["selected_id","DataList","DataList.html#method-i-selected_id","()",""],["set_all","ListStateNotifier","ListStateNotifier.html#method-i-set_all","(objects)","<p>устанавливает новое значение для items и уведомляет всех слушателей.\n"],["set_contacts","Student","Student.html#method-i-set_contacts","(phone: nil, telegram: nil, email: nil)","<p>Отдельный сеттер для массовой установки контактов\n"],["set_value","AuthorInputForm","AuthorInputForm.html#method-i-set_value","(field, value)",""],["set_value","PublisherInputForm","PublisherInputForm.html#method-i-set_value","(field, value)",""],["set_view","AuthorInputFormControllerCreate","AuthorInputFormControllerCreate.html#method-i-set_view","(view)",""],["set_view","AuthorInputFormControllerEdit","AuthorInputFormControllerEdit.html#method-i-set_view","(view)",""],["set_view","PublisherInputFormControllerCreate","PublisherInputFormControllerCreate.html#method-i-set_view","(view)",""],["set_view","PublisherInputFormControllerEdit","PublisherInputFormControllerEdit.html#method-i-set_view","(view)",""],["short_contact","StudentBase","StudentBase.html#method-i-short_contact","()","<p>Краткая информация о первом доступном контакте пользователя\n"],["short_info","Student","Student.html#method-i-short_info","()","<p>Краткая информация о пользователе\n"],["show_modal_add","AuthorListController","AuthorListController.html#method-i-show_modal_add","()",""],["show_modal_add","PublisherListController","PublisherListController.html#method-i-show_modal_add","()",""],["show_modal_edit","AuthorListController","AuthorListController.html#method-i-show_modal_edit","(current_page, per_page, selected_row)","<p>метод, который создает контроллер AuthorInputFormControllerEdit, представление AuthorInputForm, устанавливает …\n"],["show_modal_edit","PublisherListController","PublisherListController.html#method-i-show_modal_edit","(current_page, per_page, selected_row)",""],["show_view","AuthorListController","AuthorListController.html#method-i-show_view","()",""],["show_view","PublisherListController","PublisherListController.html#method-i-show_view","()",""],["show_view","TabStudentsController","TabStudentsController.html#method-i-show_view","()",""],["sort","AuthorListController","AuthorListController.html#method-i-sort","(page, per_page, sort_index)",""],["sort","PublisherListController","PublisherListController.html#method-i-sort","(page, per_page, sort_index)",""],["sorted","FileDataSource","FileDataSource.html#method-i-sorted","()",""],["str_to_hash_list","DataTransformerBase","DataTransformerBase.html#method-i-str_to_hash_list","(str)",""],["str_to_hash_list","DataTransformerJSON","DataTransformerJSON.html#method-i-str_to_hash_list","(str)",""],["str_to_hash_list","DataTransformerYAML","DataTransformerYAML.html#method-i-str_to_hash_list","(str)",""],["student_by_id","DBSourceAdapter","DBSourceAdapter.html#method-i-student_by_id","(student_id)",""],["student_by_id","FileDataSource","FileDataSource.html#method-i-student_by_id","(student_id)",""],["student_by_id","FileSourceAdapter","FileSourceAdapter.html#method-i-student_by_id","(student_id)",""],["student_by_id","StudentRepository","StudentRepository.html#method-i-student_by_id","(student_id)",""],["student_count","DBSourceAdapter","DBSourceAdapter.html#method-i-student_count","()",""],["student_count","FileDataSource","FileDataSource.html#method-i-student_count","()",""],["student_count","FileSourceAdapter","FileSourceAdapter.html#method-i-student_count","()",""],["student_count","StudentRepository","StudentRepository.html#method-i-student_count","()",""],["table_fields","DataList","DataList.html#method-i-table_fields","(_obj)","<p>Список значений полей для DataTable. Переопределить в наследниках\n"],["table_fields","DataListStudentShort","DataListStudentShort.html#method-i-table_fields","(obj)",""],["telegram=","StudentBase","StudentBase.html#method-i-telegram-3D","(new_telegram)",""],["to_2d_array","DataTable","DataTable.html#method-i-to_2d_array","()",""],["to_hash","Student","Student.html#method-i-to_hash","()",""],["to_json_str","Student","Student.html#method-i-to_json_str","()",""],["to_s","DataTable","DataTable.html#method-i-to_s","()",""],["to_s","Student","Student.html#method-i-to_s","()","<p>Методы приведения объекта к строке\n"],["to_s","StudentShort","StudentShort.html#method-i-to_s","()","<p>Методы приведения объекта к строке\n"],["update","AuthorListView","AuthorListView.html#method-i-update","(authors)","<p>Метод наблюдателя datalist def on_datalist_changed(new_table)\n\n<pre>arr = new_table.to_2d_array\narr.map do |row| ...</pre>\n"],["update","PublisherListView","PublisherListView.html#method-i-update","(publishers)","<p>Метод наблюдателя datalist def on_datalist_changed(new_table)\n\n<pre>arr = new_table.to_2d_array\narr.map do |row| ...</pre>\n"],["update_count","AuthorListView","AuthorListView.html#method-i-update_count","(new_cnt)",""],["update_count","PublisherListView","PublisherListView.html#method-i-update_count","(new_cnt)",""],["update_student_count","TabStudentsView","TabStudentsView.html#method-i-update_student_count","(new_cnt)",""],["valid?","StudentBase","StudentBase.html#method-i-valid-3F","()",""],["valid_email?","StudentBase","StudentBase.html#method-c-valid_email-3F","(email)",""],["valid_name?","StudentBase","StudentBase.html#method-c-valid_name-3F","(name)","<p>Валидаторы для полей\n"],["valid_phone?","StudentBase","StudentBase.html#method-c-valid_phone-3F","(phone)",""],["valid_profile_name?","StudentBase","StudentBase.html#method-c-valid_profile_name-3F","(profile_name)",""],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p>gem “mysql2” gem “glimmer-dsl-libui”, …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  array_include_methods (1.4.0)\n  ast (2.4.2)\n  chunky_png (1.4.0) ...</pre>\n"],["add_author_seq.puml","","diagrams/add_author_seq_puml.html","","<p>@startuml ‘plantuml.com/sequence-diagram\n<p>actor       Пользователь                        as user boundary …\n"],["author.puml","","diagrams/author_puml.html","","<p>@startuml\n<p>AuthorListView *– AuthorListController AuthorListView –* AuthorListController\n<p>AuthorListView …\n"],["core.puml","","diagrams/core_puml.html","","<p>@startuml @startuml class AuthorDBDataSource {\n<p>client: DBClient\n\n<p>+ initialize() + add(author: Author):  …\n"],["delete_author.puml","","diagrams/delete_author_puml.html","","<p>@startuml ‘plantuml.com/sequence-diagram\n<p>actor       Пользователь                        as user boundary …\n"],["edit_author.puml","","diagrams/edit_author_puml.html","","<p>@startuml ‘plantuml.com/sequence-diagram\n<p>actor       Пользователь                        as user boundary …\n"],["er.puml","","diagrams/er_puml.html","","<p>@startuml\n<p>entity Author {\n\n<pre>+AuthorID [PK]\n--\nFirstName\nLastName\nFatherName</pre>\n"],["publisher.puml","","diagrams/publisher_puml.html","","<p>@startuml\n<p>PublisherListView *– PublisherListController PublisherListView –* PublisherListController …\n"],["start.puml","","diagrams/start_puml.html","","<p>@startuml participant “main.rb”                       as main\n<p>boundary    “MainWindow” …\n"],["config.yaml","","lib/db_config/config_yaml.html","","<p>host: ‘localhost’ port: 3306 username: ‘root’ password: ‘123123’ database: ‘university’ …\n"],["library_config.yaml","","lib/db_config/library_config_yaml.html","","<p>host: ‘localhost’ port: 3306 username: ‘root’ password: ‘123123’ database: ‘library’ …\n"],["create_db.sql","","lib/db_config/migrations/create_db_sql.html","","<p>DROP DATABASE library;\n<p>CREATE DATABASE library;\n"],["create_tables.sql","","lib/db_config/migrations/create_tables_sql.html","","<p>USE library;\n<p>– Table 1: Author CREATE TABLE Author (\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">AuthorID</span>   <span class=\"ruby-constant\">INT</span> <span class=\"ruby-constant\">PRIMARY</span> <span class=\"ruby-constant\">KEY</span> <span class=\"ruby-constant\">AUTO_INCREMENT</span>,\n<span class=\"ruby-constant\">FirstName</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["mock_data.sql","","lib/db_config/mock_data/mock_data_sql.html","","<p>USE library;\n<p>– Insert 30 authors INSERT INTO Author (FirstName, LastName, FatherName) VALUES\n\n<pre>(&#39;John&#39;, ...</pre>\n"]]}}